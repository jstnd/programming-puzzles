inp = list(map(str.strip, open("input02.txt")))


def run1(part):
    kp = [["", "", "", "", ""],
          ["",  1,  2,  3, ""],
          ["",  4,  5,  6, ""],
          ["",  7,  8,  9, ""],
          ["", "", "", "", ""]] if part == 1 \
          else [["", "",  "",  "",  "", "", ""],
                ["", "",  "",   1,  "", "", ""],
                ["", "",   2,   3,   4, "", ""],
                ["",  5,   6,   7,   8,  9, ""],
                ["", "", "A", "B", "C", "", ""],
                ["", "",  "", "D",  "", "", ""],
                ["", "",  "",  "",  "", "", ""]]
    p = [2, 2] if part == 1 else [3, 1]  # 5
    for ln in inp:
        for c in ln:
            p[0] += 1 if c == "D" and kp[p[0] + 1][p[1]] != "" else -1 if c == "U" and kp[p[0] - 1][p[1]] != "" else 0
            p[1] += 1 if c == "R" and kp[p[0]][p[1] + 1] != "" else -1 if c == "L" and kp[p[0]][p[1] - 1] != "" else 0
        yield str(kp[p[0]][p[1]])


def run2(part):
    s = {"U": {1: 1, 2: 2, 3: 3, 4: 1, 5: 2, 6: 3, 7: 4, 8: 5, 9: 6},
         "D": {1: 4, 2: 5, 3: 6, 4: 7, 5: 8, 6: 9, 7: 7, 8: 8, 9: 9},
         "L": {1: 1, 2: 1, 3: 2, 4: 4, 5: 4, 6: 5, 7: 7, 8: 7, 9: 8},
         "R": {1: 2, 2: 3, 3: 3, 4: 5, 5: 6, 6: 6, 7: 8, 8: 9, 9: 9}} if part == 1 else \
        {"U": {1: 1, 2: 2, 3: 1, 4: 4, 5: 5, 6: 2, 7: 3, 8: 4, 9: 9, "A": 6, "B": 7, "C": 8, "D": "B"},
         "D": {1: 3, 2: 6, 3: 7, 4: 8, 5: 5, 6: "A", 7: "B", 8: "C", 9: 9, "A": "A", "B": "D", "C": "C", "D": "D"},
         "L": {1: 1, 2: 2, 3: 2, 4: 3, 5: 5, 6: 5, 7: 6, 8: 7, 9: 8, "A": "A", "B": "A", "C": "B", "D": "D"},
         "R": {1: 1, 2: 3, 3: 4, 4: 4, 5: 6, 6: 7, 7: 8, 8: 9, 9: 9, "A": "B", "B": "C", "C": "C", "D": "D"}}
    p = 5
    for ln in inp:
        for c in ln:
            p = s[c][p]
        yield str(p)


print("".join(run1(1)))  # part 1 - 56983
print("".join(run2(1)))  # alternate part 1
print("".join(run1(2)))  # part 2 - 8B8B1
print("".join(run2(2)))  # alternate part 2
